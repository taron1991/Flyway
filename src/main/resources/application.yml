spring:
  application.name: Migration1

  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/postgres
    username: postgres
    password: westside

  jpa:
    show-sql: true
    hibernate:
        ddl-auto: update
  flyway:
    enabled: true                # активация Flyway
    schemas: migration_test      # накатываем изменения на чистую схему, в которой нет таблиц Бд- постгрес
    locations: classpath:db/migration # по дефолту миграции хранятся тут но если хотим изменить то меняем путь
    #baseline-on-migrate: true   # накатывание изменений на СУЩЕСТВУЮЩУЮ схему в которой уже есть таблицы  
    #baseline-version: 1         # начиная с какой версии твоих существующих миграций накатывать изменения и версионировать,начиная с версии ВЫШЕ 1!!! тоесть версии до 1 НЕ БУДЕТ ВЫПОЛНЕНЫ!а только выше!(2,3,4...)
    


    #Прдеставим у тебя 3 миграции 
    #V1__create.sql
    #V2__insert.sql
    #V3__update.sql
    #Мы эти 3 миграции теперь хотим перенести на другую схему(бд,итд),где УЖЕ есть другие таблицы,ставим baseline-on-migrate: true и baseline-version:
    # самое интересное в версии baseline там нужно писать с какой версии твоих уже созданных миграции начинать накатывать на существующую схему!
    # есть 2 сценария:
    # 1. Если в baseline-version: 1 ты поставишь 1 это будет означать все версии ниже 1 включительно будут игнорироваться!!тоесть создание таблицы не будет! а выше 1(2,3..) уже нет
    # что можем делать? 1 сценарий это редактировать V1__create.sql -> V2__create.sql а V2->V3, V3->V4 теперь игнорируем V1 а V1 у нас итак нету!
    # 2 сценарий это имена файлов не менять(все оставить) а в V2 скопировать код из V1(создание таблицы) и все! игнорируем V1 а в V2 у нас и создание и добавление
